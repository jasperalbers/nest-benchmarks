<?xml version="1.0" encoding="UTF-8"?>

<jube>

    <!-- Load jobfile -->
    <fileset name="files">
      <copy>../jube_config/${job_file}.in</copy>
    </fileset>
    
    <!-- Substitute jobfile -->
    <substituteset name="sub_build_job">
      <iofile in="${job_file}.in" out="$job_file" />
      <sub source="#PARTITION#" dest="$partition" />
      <sub source="#NODES#" dest="$build_nodes" />
      <sub source="#NTASKS_PER_NODE#" dest="$build_ppn" />
      <sub source="#TIME#" dest="$walltime" />
      <sub source="#ERRPATH#" dest="$err_file" />
      <sub source="#OUTPATH#" dest="$out_file" />
      <sub source="#COMMANDS#" dest="$exec" />
      <sub source="#READY#" dest="$ready_file" />
      <sub source="#JOB_NAME#" dest="$job_name" />
    </substituteset> 

    <parameterset name="build_base">
      <parameter name="submit_cmd">sbatch</parameter>
      <parameter name="job_file">build_job.slurm</parameter>
      <parameter name="walltime">00:30:00</parameter>
      <parameter name="ready_file">ready</parameter>
      <parameter name="err_file">stderr</parameter>
      <parameter name="out_file">stdout</parameter>
    </parameterset>

    <parameterset name="build_base_daint">
       <parameter name="submit_cmd">sbatch</parameter>
       <parameter name="job_file">build_job.daint.slurm</parameter>
       <parameter name="walltime">01:30:00</parameter>
       <parameter name="ready_file">ready</parameter>
       <parameter name="err_file">stderr</parameter>
       <parameter name="out_file">stdout</parameter>
     </parameterset>

    <parameterset name="build_base_jureca">
      <parameter name="submit_cmd">sbatch</parameter>
      <parameter name="job_file">build_job.jureca.slurm</parameter>
      <parameter name="walltime">00:30:00</parameter>
      <parameter name="ready_file">ready</parameter>
      <parameter name="err_file">stderr</parameter>
      <parameter name="out_file">stdout</parameter>
    </parameterset>
    
    <parameterset name="build_nest">
      <parameter name="job_name" type="string">build-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
      	module purge;
      	module load $modules
      	module load $gsl_module
      	module load $cmake_module
        export CRAYPE_LINK_TYPE=dynamic
      	cd $NEST_SRC_DIR
      	# git checkout $nest_branch
      	cd ..
      	rm -rf $NEST_INSTALL_DIR 
      	rm -rf $NEST_BUILD_DIR
      	mkdir -p $NEST_BUILD_DIR
      	cd $NEST_BUILD_DIR
      	echo $PATH
      	cmake $nest_cmake_defs
      	make install -j $build_ppn
      </parameter>
    </parameterset>

    <parameterset name="build_nest_boost">
      <parameter name="job_name" type="string">build-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
        module swap $swap_modules
        module load $modules
        module load $boost_module
        module load $gsl_module
        module load $cmake_module
        
        export CRAYPE_LINK_TYPE=dynamic
        cd $NEST_SRC_DIR
        # git checkout $nest_branch
        cd ..
        rm -rf $NEST_INSTALL_DIR 
        rm -rf $NEST_BUILD_DIR
        mkdir -p $NEST_BUILD_DIR
        cd $NEST_BUILD_DIR
        echo $PATH
        cmake $nest_cmake_defs
        make install -j $build_ppn
      </parameter>
    </parameterset>
    
    <parameterset name="build_nest_py">
      <parameter name="job_name" type="string">build-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
      	module purge;
      	module load $modules
      	module load $gsl_module
        module load $python_module
      	module load $cmake_module
        export CRAYPE_LINK_TYPE=dynamic
      	cd $NEST_SRC_DIR
      	# git checkout $nest_branch
      	cd ..
      	rm -rf $NEST_INSTALL_DIR 
      	rm -rf $NEST_BUILD_DIR
      	mkdir -p $NEST_BUILD_DIR
      	cd $NEST_BUILD_DIR
      	echo $PATH
      	cmake $nest_cmake_defs
      	make install -j $build_ppn
      </parameter>
    </parameterset>

    <parameterset name="build_nest_boost_py">
      <parameter name="job_name" type="string">build-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
        module swap $swap_modules
        module load $modules
        module load $boost_module
        module load $gsl_module
        module load $python_module
        module load $cmake_module
        export CRAYPE_LINK_TYPE=dynamic
        cd $NEST_SRC_DIR
        # git checkout $nest_branch
        cd ..
        rm -rf $NEST_INSTALL_DIR 
        rm -rf $NEST_BUILD_DIR
        mkdir -p $NEST_BUILD_DIR
        cd $NEST_BUILD_DIR
        echo $PATH
        cmake $nest_cmake_defs
        make install -j $build_ppn
      </parameter>
    </parameterset>

    <parameterset name="build_nest_boost_py_jureca">
      <parameter name="job_name" type="string">build-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
        <!-- module swap $swap_modules -->
        module load $cmake_module
        module load $gsl_module
        module load $boost_module
        module load $python_module
        module load $modules
        <!-- export CRAYPE_LINK_TYPE=dynamic -->
        cd $NEST_SRC_DIR
        # git checkout $nest_branch
        cd ..
        rm -rf $NEST_INSTALL_DIR 
        rm -rf $NEST_BUILD_DIR
        mkdir -p $NEST_BUILD_DIR
        cd $NEST_BUILD_DIR
        echo $PATH
        cmake $nest_cmake_defs
        make install -j $build_ppn
      </parameter>
    </parameterset>

    <parameterset name="build_jemalloc">
      <parameter name="job_name" type="string">build-jemalloc-$system_name</parameter>      
      <parameter name="exec">
    	module swap $swap_modules
      module load $modules
    	cd ${bench_work}/jemalloc
    	rm -rf $JEMALLOC_INSTALL_DIR
    	cd $jemalloc_version
    	./configure --prefix=${JEMALLOC_INSTALL_DIR} ${jemalloc_configure_flags}
    	make install -j $build_ppn
      </parameter>
    </parameterset>
    
    <parameterset name="run_nest_installcheck">
      <parameter name="job_name" type="string">icheck-${nest_version}-${system_name}-${nest_config}</parameter>      
      <parameter name="exec">
    	module purge;
    	module load $modules
    	module load $python_module
    	cd $NEST_BUILD_DIR
    	make installcheck
      </parameter>
    </parameterset>

    <patternset name="nest_installcheck_pattern">
      <pattern name="n_tests" type="int">Total number of tests: $jube_pat_int</pattern>
      <pattern name="n_passed" type="int">Passed: $jube_pat_int</pattern>
      <pattern name="n_skipped" type="int">Skipped: $jube_pat_int</pattern>
      <pattern name="n_failed" type="int">Failed: $jube_pat_int</pattern>
    </patternset>

    
</jube>
